# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches:
      - emboldcli_test

  pull_request:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8corona.tar.gz
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      # Runs a set of commands using the runners shell
      - name: Run with Embold CLI
        run: |
          echo "Run with Embold CLI"
          response=$(curl --silent --location --request GET "https://oss.emboldci.dev/api/v1/packagedownload/corona?os=linux&checksum=null" --header "Authorization:Bearer ${{ secrets.EMBOLD_OSS_SCAN_TOKEN }}" -o corona.tar.gz)
          tar -xf corona.tar.gz
          mkdir temp
          echo -e "embold.url=https://oss.emboldci.dev \nembold.token=${{ secrets.EMBOLD_OSS_SCAN_TOKEN }}" >| ./opt/gamma/corona/coronacli/config/cli.properties
          echo -------------------------
          git log -1 --pretty="" --name-status >> ./log.txt
          export CORONA_HOME=./opt/gamma/corona
          export CORONA_LOG=./opt/gamma/corona/logs
          ./opt/gamma/corona/coronacli/bin/coronacli -b "/home/runner/work/unirest-java/unirest-java" -c "/home/runner/work/unirest-java/unirest-java" -r "git" -p "./opt/gamma/corona/coronacli/config/plugins_empty.xml" -d "/home/runner/work/unirest-java/unirest-java/temp" -g -gl ./log.txt -ds
          rm ./log.txt
          cat ./temp/GatedCommit/quality_gate_output.txt
          quality_gate_output_file=./temp/GatedCommit/quality_gate_output.txt
          var=`cat $quality_gate_output_file | grep Status`
          statusline=`echo "$var" | cut -d$'\n' -f1`
          status=`echo "$statusline" | cut -c 8-`
          if [[ "$status" == "fail" ]]
          then
            exit -1
          fi
          
          
          
        
